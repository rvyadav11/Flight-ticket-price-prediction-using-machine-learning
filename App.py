# -*- coding: utf-8 -*-
"""PY_FILE28.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BK_XI_u5dDIQfLR3FVpbVVZOn01OjSLs
"""

from flask import Flask, request, render_template

import sklearn
import pickle
import pandas as pd

!pip install flask flask-cors

from flask import Flask, jsonify
from flask_cors import CORS, cross_origin

app = Flask(__name__)
CORS(app, support_credentials=True)

@app.route("/login")
@cross_origin(supports_credentials=True)
def login():
  return jsonify({'success': 'ok'})

if __name__ == "__main__":
  app.run(host='0.0.0.0', port=8000, debug=True)

app = Flask(__name__)
model = pickle.load(open('flight_modelRE.pkl','rb'))

@app.route("/")
@cross_origin()
def home():
    return render_template("home.html")

@app.route("/predict", methods = ["GET", "POST"])
@cross_origin()
def predict():
    if request.method == "POST":

        # departure_time
        departure_time = request.form["departure_time"]
        #Journey_day = int(pd.to_datetime(date_dep, format="%Y-%m-%dT%H:%M").day)
        #Journey_month = int(pd.to_datetime(date_dep, format ="%Y-%m-%dT%H:%M").month)
        # print("Journey Date : ",Journey_day, Journey_month)

        # Departure
        #Dep_hour = int(pd.to_datetime(date_dep, format ="%Y-%m-%dT%H:%M").hour)
        #Dep_min = int(pd.to_datetime(date_dep, format ="%Y-%m-%dT%H:%M").minute)
        # print("Departure : ",Dep_hour, Dep_min)

        # arrival_time
        arrival_time = request.form["arrival_time"]
        #Arrival_hour = int(pd.to_datetime(date_arr, format ="%Y-%m-%dT%H:%M").hour)
        #Arrival_min = int(pd.to_datetime(date_arr, format ="%Y-%m-%dT%H:%M").minute)
        # print("Arrival : ", Arrival_hour, Arrival_min)

        # duration
        duration = abs(duration)
        #dur_min = abs(Arrival_min - Dep_min)
        # print("Duration : ", dur_hour, dur_min)

        # stops
        stops = int(request.form["stops"])
        # print(Total_stops)

        # Airline
        # AIR ASIA = 0 (not in column)

airline=request.form['airline']
        if(airline=='Air_India'):
            Air_India = 1
            AirAsia = 0
            GO_FIRST = 0
            Indigo = 0
            SpiceJet = 0
            Vistara = 0
           

        elif (airline=='AirAsia'):
            Air_India = 0
            AirAsia = 1
            GO_FIRST = 0
            Indigo = 0
            SpiceJet = 0
            Vistara = 0

        elif (airline=='GO_FIRST'):
            Air_India = 0
            AirAsia = 0
            GO_FIRST = 1
            Indigo = 0
            SpiceJet = 0
            Vistara = 0 
            
        elif (airline=='Indigo'):
            Air_India = 0
            AirAsia = 0
            GO_FIRST = 0
            Indigo = 1
            SpiceJet = 0
            Vistara = 0
            
        elif (airline=='SpiceJet'):
            Air_India = 0
            AirAsia = 0
            GO_FIRST = 0
            Indigo = 0
            SpiceJet = 1
            Vistara = 0
            
        elif (airline=='Vistara'):
            Air_India = 0
            AirAsia = 0
            GO_FIRST = 0
            Indigo = 0
            SpiceJet = 0
            Vistara = 1

       
        else:
            Air_India = 0
            AirAsia = 0
            GO_FIRST = 0
            Indigo = 0
            SpiceJet = 0
            Vistara = 0

        # print(Jet_Airways,
        #     IndiGo,
        #     Air_India,
        #     Multiple_carriers,
        #     SpiceJet,
        #     Vistara,
        #     GoAir,
        #     Multiple_carriers_Premium_economy,
        #     Jet_Airways_Business,
        #     Vistara_Premium_economy,
        #     Trujet)

        # Source
        # Banglore = 0 (not in column)
        Source = request.form["source_city"]
        if (Source == 'Delhi'):
            Bangalore = 0
            Chennai = 0
            Delhi = 1
            Hyderabad = 0
            Kolkata = 0
            Mumbai = 0
           

        elif (Source == 'Kolkata'):
            Bangalore = 0
            Chennai = 0
            Delhi = 0
            Hyderabad = 0
            Kolkata = 1`
            Mumbai = 0

        elif (Source == 'Mumbai'):
            Bangalore = 0
            Chennai = 0
            Delhi = 0
            Hyderabad = 0
            Kolkata = 0
            Mumbai = 1

        elif (Source == 'Chennai'):
            Bangalore = 0
            Chennai = 1
            Delhi = 0
            Hyderabad = 0
            Kolkata = 0
            Mumbai = 0

        elif (Source == 'Bangalore'):
            Bangalore = 1
            Chennai = 0
            Delhi = 0
            Hyderabad = 0
            Kolkata = 0
            Mumbai = 0

        elif (Source == 'Hyderabad'):
            Bangalore = 0
            Chennai = 0
            Delhi = 0
            Hyderabad = 1
            Kolkata = 0
            Mumbai = 0

        else:
            Bangalore = 0
            Chennai = 0
            Delhi = 0
            Hyderabad = 0
            Kolkata = 0
            Mumbai = 0

        # print(s_Delhi,
        #     s_Kolkata,
        #     s_Mumbai,
        #     s_Chennai)

        # Destination
        # Banglore = 0 (not in column)
        Source = request.form["destination_city"]
        if (Source == 'Bangalore'):
            Bangalore = 1
            Chennai = 0
            Delhi = 0
            Hyderabad = 0
            Kolkata = 0
        
        elif (Source == 'Chennai'):
            Bangalore = 0
            Chennai = 1
            Delhi = 0
            Hyderabad = 0
            Kolkata = 0

        elif (Source == 'Delhi'):
            Bangalore = 0
            Chennai = 0
            Delhi = 1
            Hyderabad = 0
            Kolkata = 0

        elif (Source == 'Hyderabad'):
            Bangalore = 0
            Chennai = 0
            Delhi = 0
            Hyderabad = 1
            Kolkata = 0

        elif (Source == 'Kolkata'):
            Bangalore = 0
            Chennai = 0
            Delhi = 0
            Hyderabad = 0
            Kolkata = 1

        

        else:
            Bangalore = 0
            Chennai = 0
            Delhi = 0
            Hyderabad = 0
            Kolkata = 0
        # print(
        #     d_Cochin,
        #     d_Delhi,
        #     d_New_Delhi,
        #     d_Hyderabad,
        #     d_Kolkata
        # )
        

    #     ['Total_Stops', 'Journey_day', 'Journey_month', 'Dep_hour',
    #    'Dep_min', 'Arrival_hour', 'Arrival_min', 'Duration_hours',
    #    'Duration_mins', 'Airline_Air India', 'Airline_GoAir', 'Airline_IndiGo',
    #    'Airline_Jet Airways', 'Airline_Jet Airways Business',
    #    'Airline_Multiple carriers',
    #    'Airline_Multiple carriers Premium economy', 'Airline_SpiceJet',
    #    'Airline_Trujet', 'Airline_Vistara', 'Airline_Vistara Premium economy',
    #    'Source_Chennai', 'Source_Delhi', 'Source_Kolkata', 'Source_Mumbai',
    #    'Destination_Cochin', 'Destination_Delhi', 'Destination_Hyderabad',
    #    'Destination_Kolkata', 'Destination_New Delhi']
        
        prediction=model.predict([[
            stops,
            departure_time,
            arrival_time,
            duration,
            Air_India,
            AirAsia,
            GO_FIRST,
            Indigo,
            SpiceJet,
            Vistara,
            Bangalore,
            Chennai,
            Delhi,
            Hyderabad,
            Kolkata,
            Mumbai,
            Bangalore,
            Chennai,
            Delhi,
            Hyderabad,
            Kolkata
        ]])

        output=round(prediction[0],2)

        return render_template('home.html',prediction_text="Your Flight price is Rs. {}".format(output))


    return render_template("home.html")




if __name__ == "__main__":
    app.run(debug=True)